(?:[^'"\\]|\\.)*   -> any word without quotes or double

'[^']*'|"[^']*" -> match quotes


.replace(/require|public|private|protected|static|void/g, v => `<span class="blue">${v}</span>`)
.replace(/([.][a-zA-Z0-9_]+)(\(?)/g, `<span class="violet">$1</span>`)
.replace(/(const|let|true|false|return|await|async)\s+/g, '<span class="red">$1 </span>')
.replace(/'(.*)'/g, `<span class="green">'$1'</span>`)
.replace(/\/(\/)[^\n]*$/, v=>`<span class="gray">${v}</span>`)


var strReg1 = /"(.*?)"/g,
strReg2 = /'(.*?)'/g,
specialReg = /\b(new|var|if|do|function|while|switch|for|foreach|in|continue|break)(?=[^\w])/g,
specialJsGlobReg = /\b(document|window|Array|String|Object|Number|\$)(?=[^\w])/g,
specialJsReg = /\b(getElementsBy(TagName|ClassName|Name)|getElementById|typeof|instanceof)(?=[^\w])/g,
specialMethReg = /\b(indexOf|match|replace|toString|length)(?=[^\w])/g,
specialPhpReg  = /\b(define|echo|print_r|var_dump)(?=[^\w])/g,
specialCommentReg  = /(\/\*.*\*\/)/g,
inlineCommentReg = /(\/\/.*)/g;

var htmlTagReg = /(&lt;[^\&]*&gt;)/g;

var sqlReg = /\b(CREATE|ALL|DATABASE|TABLE|GRANT|PRIVILEGES|IDENTIFIED|FLUSH|SELECT|UPDATE|DELETE|INSERT|FROM|WHERE|ORDER|BY|GROUP|LIMIT|INNER|OUTER|AS|ON|COUNT|CASE|TO|IF|WHEN|BETWEEN|AND|OR)(?=[^\w])/g;


//  spanLine.innerHTML = `<span class="num">${i + 1}</span>`;

    if (line.length < 1) spanLine.textContent += " "
    else {
      //line = line.replace(/[&<>]/g, chr => htmlEscapes[chr]);

      line.split(/ /gm).forEach(w => {
        //const wLine = document.createElement('span');
 
        if (w && (w.startsWith('"') || w.startsWith("'"))) {
          console.log(w);
          w = w.replace(/"(.*)"|'(.*)'/g, v => `<span class="green">${v}</span>`)
        }
        else { w = w|| " "; }

        spanLine.innerHTML += w;
      });
    }

    s = s.replace(/(\"|\')(\\?.)*?\1/g, v => '<span class="yellow">'+v+'</span>');

s = s.replace(/\b(let|const|var|define)(?=[^\w])/gi, '<span style="color:#66D9EF">$1</span>');

s = s.replace(/\s+\d+/g, v => '<span class="light-blue">'+v+'</span>');

s = s.replace(/\w+\./g, v => '<span class="blue">'+v+'</span>')

s = s.replace(/function(.*?)\(/g, '<span style="color:#66D9EF">function</span><span style="color:#A6E22E">$1</span>(');

s = s.replace(/\b(if|else|typeof|new|if|do|while|switch|for|in|continue|break|return)(?=[^\w])/g, '<span style="color:#F92672">$1</span>');

s = s.replace(/\.\w+/g, v => '<span class="green">'+v+'</span>');

s = s.replace("this", v => '<span class="bege">'+v+'</span>')

// comments
s = s.replace(/\/\/[\s\S]*?\*\//g, v =>"<span style='color:#8c8c8c !important'>"+v+"</span>");
s = s.replace(/\/\*[\s\S]*?\*\//g, v =>"<span style='color:#8c8c8c !important'>"+v+"</span>");

document.getElementById("my-code").innerHTML = s;
console.log(s)
